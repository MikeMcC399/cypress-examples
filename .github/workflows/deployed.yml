# Scrape deployed site into Algolia index
# https://glebbahmutov.com/blog/scrape-static-site-with-algolia/
name: deployed
on:
  status:
    branches:
      - master
jobs:
  test-publish-scrape:
    if: github.event.context == 'github/pages' && github.event.state == 'success'
    runs-on: ubuntu-latest
    steps:
      - run: echo "gh-pages 📑 deployed successfully ✅"

      # we need our scraping config, thus check out code
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install dependencies 📦
        uses: cypress-io/github-action@v1
        with:
          # just perform install
          runTests: false

      - name: Export Markdown specs 🖨
        run: ./md-to-js.sh https://glebbahmutov.com/cypress-examples

      - name: Catch stray .only tests 🚦
        run: npm run stop-only

      - name: Format extracted specs 💅
        run: npm run format:extracted

      # we "simulate" Run All Specs button in Test Runner GUI
      # by concatenating all extracted specs into a single one
      # to be included in the test run.
      # Note: delete this file before publishing to NPM
      - name: Create Run All Spec 🏗
        run: cat docs/**/*.js > docs/run-all-specs.js

      - name: Test deployed site 🧪💨
        uses: cypress-io/github-action@v1
        with:
          # we have already installed all dependencies above
          install: false
          config-file: cypress-dist.json

      - name: Delete run all specs file 🗑
        run: rm docs/run-all-specs.js

      - name: Semantic Release 🚀
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # when scraping the site, inject secrets as environment variables
      # then pass their values into the Docker container using "-e" syntax
      # and inject config.json contents as another variable
      - name: scrape the site 🧽
        env:
          APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
          API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        run: |
          docker run \
          -e APPLICATION_ID -e API_KEY \
          -e CONFIG="$(cat algolia-config.json)" \
          algolia/docsearch-scraper:v1.6.0
